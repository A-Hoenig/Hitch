# Generated by Django 3.2.13 on 2024-01-24 18:06

import cloudinary.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.IntegerField(choices=[(0, 'Female'), (1, 'Male'), (2, 'Non Binary'), (3, 'Prefer not to say')], default=3)),
                ('DOB', models.DateField(blank=True, default=None, null=True, verbose_name='Birthday')),
                ('adr_street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('adr_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='City')),
                ('adr_zip', models.CharField(blank=True, max_length=10, null=True, verbose_name='ZIP Code')),
                ('adr_country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Country')),
                ('phone', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('DL_date', models.DateField(blank=True, default=None, null=True, verbose_name="Driver's License Date")),
                ('contactable', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('user_image', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
                ('average_driver_rating', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=3, null=True)),
                ('average_hitcher_rating', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=3, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=15)),
                ('country', models.CharField(max_length=50)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('google_id', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('input_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=50, unique=True)),
                ('purpose_icon', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('region', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stop_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop', models.CharField(max_length=50, unique=True)),
                ('stop_icon', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('make', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.IntegerField(choices=[(0, 'Sedan'), (1, 'SUV'), (2, 'Roadster'), (3, 'Minvan'), (4, 'Truck'), (5, 'Bus'), (6, 'LKW')], default=0)),
                ('year', models.CharField(blank=True, max_length=4, null=True)),
                ('engine', models.IntegerField(choices=[(0, 'Gasoline'), (1, 'Diesel'), (2, 'Hybrid'), (3, 'Electric'), (4, 'LNG'), (5, 'OTHER')], default=0)),
                ('smoking', models.IntegerField(choices=[(True, 'Yes'), (False, 'No')], default=0)),
                ('max_pax', models.IntegerField(default=1)),
                ('operator', models.CharField(blank=True, max_length=50, null=True, verbose_name='Operated by')),
                ('status', models.BooleanField(choices=[(True, 'Active'), (False, 'Not Active')], default=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('rating_type', models.CharField(choices=[('driver', 'Driver'), ('hitcher', 'Hitcher')], max_length=7)),
                ('star_rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('comment', models.TextField(blank=True, max_length=300, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('depart_date', models.DateField()),
                ('trip_status', models.IntegerField(blank=True, choices=[(0, 'Confirmed'), (1, 'Completed'), (2, 'Cancelled')], default=0, null=True)),
                ('max_hitch', models.IntegerField(default=1)),
                ('depart_time', models.TimeField()),
                ('expected_duration', models.DurationField(blank=True, null=True)),
                ('expected_arrival_time', models.TimeField(blank=True, null=True)),
                ('depart_window', models.DurationField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=150, null=True)),
                ('direction', models.BooleanField(choices=[(0, 'One Way'), (1, 'Return Trip')], default=False)),
                ('return_time', models.TimeField(blank=True, null=True)),
                ('recurring', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('mon', models.BooleanField(default=False)),
                ('tue', models.BooleanField(default=False)),
                ('wed', models.BooleanField(default=False)),
                ('thu', models.BooleanField(default=False)),
                ('fri', models.BooleanField(default=False)),
                ('sat', models.BooleanField(default=False)),
                ('sun', models.BooleanField(default=False)),
                ('suggested_tip', models.FloatField(blank=True, null=True)),
                ('pickup_radius', models.IntegerField(blank=True, default=2, null=True)),
                ('max_detour_dist', models.IntegerField(blank=True, default=5, null=True)),
                ('depart', models.ForeignKey(default='no record', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='depart', to='rides.location')),
                ('destination', models.ForeignKey(default='no record', on_delete=django.db.models.deletion.SET_DEFAULT, to='rides.location')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('purpose', models.ForeignKey(default='deleted', on_delete=django.db.models.deletion.SET_DEFAULT, to='rides.purpose')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.region')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rides.vehicle')),
            ],
            options={
                'ordering': ['-depart_date'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(blank=True, max_length=500, null=True)),
                ('was_read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.trip')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.AddField(
            model_name='location',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.region'),
        ),
        migrations.AddField(
            model_name='location',
            name='stoptype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rides.stop_type'),
        ),
        migrations.CreateModel(
            name='Hitch_Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('depart_date', models.DateField()),
                ('depart_time', models.TimeField(blank=True, null=True)),
                ('depart_window', models.DurationField(blank=True, null=True)),
                ('smoking', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('direction', models.IntegerField(choices=[(0, 'One Way'), (1, 'Return Trip')], default=0)),
                ('recurring', models.IntegerField(blank=True, null=True)),
                ('pax_approved', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('trip_rating', models.IntegerField(blank=True, null=True)),
                ('trip_comment', models.CharField(blank=True, max_length=50, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('depart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_depart', to='rides.location')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rides.location')),
                ('hitcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('purpose', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='rides.purpose')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rides.region')),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hitch_requests', to='rides.trip')),
            ],
            options={
                'ordering': ['-depart_date'],
            },
        ),
    ]
